document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('mcForm');
  const formElement = document.getElementById('mc_form'); // D√πng cho FormData
  const previewImg = document.getElementById('mc_preview_image');
  const tableFrame = document.getElementById('mcTableFrame');
  const previewBox = document.querySelectorAll('.preview-box');

  // üîÅ H√†m reset form
  function clearFormFields() {
    form.querySelectorAll('input[type="text"], textarea').forEach(el => el.value = '');
    form.querySelectorAll('select').forEach(sel => sel.selectedIndex = 0);

    if (previewImg) {
      previewImg.src = '';
      previewImg.style.display = 'none';
    }

    const imageInput = form.querySelector('#mc_image');
    if (imageInput) imageInput.value = '';

    ['existing_image', 'existing_public_id', 'mc_id'].forEach(name => {
      const input = form.querySelector(`input[name="${name}"]`);
      if (input) input.remove();
    });

    previewBox.forEach(div => {
      div.innerHTML = '';
      div.style.display = 'none';
    });

    const previewContainer = document.getElementById('mcPreview');
    if (previewContainer) previewContainer.style.display = 'none';

    const previewContent = document.getElementById('mcPreviewContent');
    if (previewContent) previewContent.innerHTML = '';

    if (window.MathJax && window.MathJax.typeset) {
      MathJax.typeset(); // Render l·∫°i c√¥ng th·ª©c to√°n h·ªçc
    }
  }

  // üîÅ G·ª≠i t√≠n hi·ªáu reload iframe b·∫£ng
  function reloadTableFrame() {
    if (tableFrame?.contentWindow) {
      tableFrame.contentWindow.postMessage({ action: 'reload_table' }, '*');
    }
  }

  // ‚úÖ N√∫t ·∫®n/Hi·ªán danh s√°ch
  document.getElementById('mc_view_list')?.addEventListener('click', () => {
    const wrapper = document.getElementById('mcTableWrapper');
    wrapper.style.display = (wrapper.style.display === 'none' || !wrapper.style.display)
      ? 'block'
      : 'none';
  });

  // ‚úÖ N√∫t L√†m l·∫°i
  document.getElementById('mc_reset')?.addEventListener('click', clearFormFields);

  // ‚úÖ N√∫t Xo√°
  document.getElementById('mc_delete_btn')?.addEventListener('click', async () => {
    const btn = document.getElementById('mc_delete_btn');
    const mc_id = document.getElementById('mc_id')?.value;

    if (!mc_id) return alert('‚ö†Ô∏è Vui l√≤ng ch·ªçn m·ªôt d√≤ng ƒë·ªÉ xo√°.');

    if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° kh√¥ng?')) return;

    btn.disabled = true;
    btn.textContent = 'ƒêang xo√°...';

    try {
      const res = await fetch('../../includes/mc/mc_fetch_data.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `delete_mc_id=${encodeURIComponent(mc_id)}`
      });

      const data = await res.json();

      if (data.success) {
        alert('‚úÖ ƒê√£ xo√° th√†nh c√¥ng.');
        clearFormFields();
        reloadTableFrame();
      } else {
        alert(data.error || '‚ùå L·ªói khi xo√°.');
      }

    } catch (err) {
      console.error('‚ùå L·ªói fetch:', err);
      alert('‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.');
    } finally {
      btn.disabled = false;
      btn.textContent = 'Xo√°';
    }
  });

  // ‚úÖ N√∫t L∆∞u ·∫£nh
  document.getElementById('mc_save_image').addEventListener('click', async function () {
    const file = document.getElementById('mc_image').files[0];
    const mc_id = document.getElementById('mc_id').value;
    const preview = document.getElementById('mc_preview_image');
  
    if (!file || !mc_id) {
      alert('‚ùå Vui l√≤ng ch·ªçn ·∫£nh v√† c√≥ ID.');
      return;
    }
  
    const formData = new FormData();
    formData.append('file', file);
    formData.append('upload_preset', 'YOUR_UPLOAD_PRESET');
  
    try {
      const res = await fetch('https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/image/upload', {
        method: 'POST',
        body: formData
      });
      const data = await res.json();
  
      if (data.secure_url) {
        // Hi·ªÉn th·ªã ·∫£nh xem tr∆∞·ªõc
        preview.src = data.secure_url;
        preview.style.display = 'block';
  
        // G·ª≠i URL v·ªÅ server PHP ƒë·ªÉ l∆∞u v√†o CSDL
        const saveRes = await fetch('../../includes/mc/save_uploaded_image.php', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
          },
          body: new URLSearchParams({
            mc_id: mc_id,
            image_url: data.secure_url
          })
        });
  
        const saveResult = await saveRes.json();
        if (saveResult.success) {
          alert('‚úÖ ƒê√£ l∆∞u ·∫£nh v√†o c∆° s·ªü d·ªØ li·ªáu.');
          document.getElementById('mcTableFrame')?.contentWindow?.location.reload();
        } else {
          alert('‚ùå ' + (saveResult.error || 'L·ªói khi l∆∞u ·∫£nh.'));
        }
      } else {
        alert('‚ùå T·∫£i ·∫£nh l√™n th·∫•t b·∫°i.');
      }
  
    } catch (err) {
      console.error(err);
      alert('‚ùå C√≥ l·ªói x·∫£y ra khi t·∫£i ·∫£nh.');
    }
  });

  // ‚úÖ N√∫t Xo√° ·∫£nh
  document.getElementById('mc_clear_image').addEventListener('click', async function () {
    const previewImg = document.getElementById('mc_preview_image');
    const imageUrl = previewImg.src;

    if (!imageUrl || imageUrl.includes('default') || imageUrl === window.location.href) {
      alert("‚ùå Kh√¥ng c√≥ ·∫£nh n√†o ƒë·ªÉ xo√°.");
      return;
    }

    try {
      const response = await fetch('includes/mc/delete_cloudinary_image.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({ image_url: imageUrl })
      });

      const result = await response.json();

      if (result.success) {
        alert("‚úÖ ·∫¢nh ƒë√£ ƒë∆∞·ª£c xo√° kh·ªèi Cloudinary.");

        // 1. Xo√° ·∫£nh kh·ªèi ph·∫ßn xem tr∆∞·ªõc
        previewImg.src = '';

        // 2. Reset input file
        document.getElementById('mc_image').value = '';

        // 3. ·∫®n c√°c n√∫t li√™n quan
        document.getElementById('mc_clear_image').style.display = 'none';
        document.getElementById('mc_save_image').style.display = 'none';

        // 4. C·∫≠p nh·∫≠t l·∫°i iframe ch·ª©a b·∫£ng mc_table.php
        const iframe = document.getElementById('mcTableFrame');
        if (iframe) {
          iframe.contentWindow.location.reload();
        }

      } else {
        alert("‚ùå L·ªói khi xo√° ·∫£nh: " + (result.error || 'Kh√¥ng r√µ nguy√™n nh√¢n.'));
      }

    } catch (error) {
      console.error('L·ªói khi g·ªçi API xo√° ·∫£nh:', error);
      alert("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.");
    }
  });

});
